# This workflow will delete all the ACA Apps
name: Delete Apps

env:
  APP_NAME: petcliaks
  APP_NAMESPACE: staging
  LOCATION: westeurope # francecentral
  
  RG_KV: rg-iac-kv33 # RG where to deploy KV
  RG_APP: rg-iac-aks-petclinic-mic-srv # RG where to deploy the other Azure services: AKS, ACR, MySQL, etc.
  AKS_CLUSTER_NAME: aks-petclinic-staging-101 #aks-<App Name>-<Environment>-<###>

  ADMIN_SERVER: petclinic-admin-server # '${appName}-admin-server' ==> petcliaks-admin-server
  CONFIG_SERVER: petclinic-config-server
  DISCOVERY_SERVER: petclinic-discovery-server

  API_GATEWAY: petclinic-api-gateway
  CUSTOMERS_SERVICE: petclinic-customers-service
  VETS_SERVICE: petclinic-vets-service
  VISITS_SERVICE: petclinic-visits-service

  # https://github.com/Azure/actions-workflow-samples/blob/master/assets/create-secrets-for-GitHub-workflows.md#consume-secrets-in-your-workflow
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-secrets

  # ==== Secrets ====
  credentials: ${{ secrets.AZURE_CREDENTIALS }}

  # ==== Versions ====
  AZ_CLI_VERSION: 2.42.0

on:
  workflow_dispatch:

jobs:
  delete-apps:
    runs-on: ubuntu-latest

    steps:

    - name: Azure Login
      uses: azure/login@v1.4.6 # https://github.com/marketplace/actions/azure-login
      with:
        creds: ${{ env.credentials }}

    # https://github.com/marketplace/actions/azure-kubernetes-set-context
    - uses: azure/aks-set-context@v3
      with:
        resource-group: ${{ env.RG_APP }}
        cluster-name: ${{ env.AKS_CLUSTER_NAME }}

    - name: Delete Apps
      uses: azure/CLI@v1.0.6 # https://github.com/marketplace/actions/azure-cli-action
      with:
        azcliversion: ${{ env.AZ_CLI_VERSION }}
        inlineScript: |
          az config set extension.use_dynamic_install=yes_without_prompt

          az aks list -o table
          # az aks get-credentials --name ${{ env.AKS_CLUSTER_NAME }} -g ${{ env.RG_APP }}
          az aks show -n ${{ env.AKS_CLUSTER_NAME }} -g ${{ env.RG_APP }}
          kubectl cluster-info
          kubectl config view
          kubectl config get-contexts

          aks_api_server_url=$(az aks show -n ${{ env.AKS_CLUSTER_NAME }} -g ${{ env.RG_APP }} --query 'fqdn' -o tsv)
          echo "AKS API server URL: " $aks_api_server_url

          kubectl get deploy,po -n ${{ env.APP_NAMESPACE }}
          kubectl get po -o=custom-columns=':metadata.name' -n ${{ env.APP_NAMESPACE }}

          for pod in $(kubectl get po -n ${{ env.APP_NAMESPACE }} -o=custom-columns=:.metadata.name)
          do
            if [[ "$pod"=~"^$service*" ]]
              then
                echo "Verifying Pod $pod"
                kubectl logs $pod -n ${{ env.APP_NAMESPACE }} | grep -i "Error"
            fi
          done

          for dp in $(kubectl get deploy -n ${{ env.APP_NAMESPACE }} -o=custom-columns=:.metadata.name)
          do
            if [[ "$dp"=~"^$service*" ]]
              then
                echo "About to delete Deployment $dp"
                kubectl delete deployment $dp -n ${{ env.APP_NAMESPACE }}
            fi
          done

    # security hardening for self-hosted agents: https://github.com/marketplace/actions/azure-login
    # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#hardening-for-self-hosted-runners
    # if the runner is self-hosted which is not github provided it is recommended to manually logout at the end of the workflow as shown below.
    - name: Azure Logout security hardening
      uses: azure/CLI@v1
      with:
        azcliversion: ${{ env.AZ_CLI_VERSION }}
        inlineScript: |
          az logout
          az cache purge
          az account clear