name: Install ingress-nginx and configure DNS

env:
  APP_NAME: petcliaks
  LOCATION: westeurope
  RG_KV: rg-iac-kv33 # RG where to deploy KV
  RG_APP: rg-iac-aks-petclinic-mic-srv # RG where to deploy the other Azure services: AKS, ACR, MySQL, etc.
  
  ACR_NAME: acrpetcliaks # customize this
  DNS_ZONE: cloudapp.azure.com
  APP_DNS_ZONE: petclinic.westeurope.cloudapp.azure.com
  CUSTOM_DNS: javaonazurehandsonlabs.com
  AZURE_DNS_LABEL_NAME: petclinic

  PETCLINIC_NAMESPACE: petclinic
  AKS_CLUSTER_NAME: aks-petcliaks
  VNET_NAME: vnet-aks

  DNS_PREFIX: appinnojava # customize this
  ING_NS: ingress # Namespace to use for the Ingress Controller
  AKS_IDENTITY_NAME: id-aks-cluster-dev-westeurope-101 # customize this

  # ==== APPS ====
  CLOUD_PROVIDER_ENV: azure
  PRJ_PREFIX: spring-petclinic

  API_GATEWAY: api-gateway
  ADMIN_SERVER: admin-server
  CUSTOMERS_SERVICE: customers-service
  VETS_SERVICE: vets-service
  VISITS_SERVICE: visits-service

  CONFIG_SERVER: config-server
  DISCOVERY_SERVER: discovery-server

  # https://github.com/Azure/actions-workflow-samples/blob/master/assets/create-secrets-for-GitHub-workflows.md#consume-secrets-in-your-workflow
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-secrets

  # ==== Secrets ====

  credentials: ${{ secrets.AZURE_CREDENTIALS }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  # ==== Versions ====
  DEPLOYMENT_VERSION: 2.6.13
  AZ_CLI_VERSION: 2.42.0
  JAVA_VERSION: 11

on:
  workflow_dispatch:
  workflow_call:

jobs:
 
  setup:
    runs-on: ubuntu-latest
            
    steps:

    - name: Login with GHA Runner SP
      uses: azure/login@v1.4.6 # https://github.com/marketplace/actions/azure-login
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} # ${{ env.credentials }}

    - name: Checkout
      uses: actions/checkout@v3 # https://github.com/actions/checkout

    # https://github.com/Azure/aks-set-context/tree/releases/v1
    - name: AKS Set Context
      uses: azure/aks-set-context@v1
      with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}' # Azure credentials
          resource-group: ${{ env.RG_APP }} 
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
      id: akslogin

    # https://github.com/marketplace/actions/helm-tool-installer
    - name: HELM Install
      run: |
            # https://github.com/kubernetes/ingress-nginx
            # https://artifacthub.io/packages/helm/ingress-nginx/ingress-nginx
            # https://docs.nginx.com/nginx-ingress-controller/installation/installation-with-helm/
            # https://learn.microsoft.com/en-us/azure/aks/ingress-basic?tabs=azure-cli#create-an-ingress-controller

            # az aks get-credentials --name ${{ env.AKS_CLUSTER_NAME }} -g ${{ env.RG_APP }}
            managed_rg=$(az aks show --resource-group ${{ env.RG_APP }} --name ${{ env.AKS_CLUSTER_NAME }} --query nodeResourceGroup -o tsv)
            echo "CLUSTER_RESOURCE_GROUP:" $managed_rg
            echo "managed_rg=$managed_rg" >> $GITHUB_ENV

            helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
            helm repo update

            # https://learn.microsoft.com/en-us/azure/aks/ingress-tls?tabs=azure-cli#use-a-static-public-ip-address
            helm install ingress-nginx ingress-nginx/ingress-nginx \
              --create-namespace --namespace ${{ env.ING_NS }} \
              --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-dns-label-name"=${{ env.AZURE_DNS_LABEL_NAME }}
              --set controller.service.annotations."service\.beta\.kubernetes\.io/azure-load-balancer-health-probe-request-path"=/healthz            
            
            helm ls --namespace ${{ env.ING_NS }}
            sleep 15
            kubectl get deployments -n ${{ env.ING_NS }} -l app.kubernetes.io/name=ingress-nginx

            ingress_controller_ip=$(kubectl get svc -n ${{ env.ING_NS }} ingress-nginx-controller -o jsonpath="{.status.loadBalancer.ingress[*].ip}")
            echo "ING_CTL_IP:" $ingress_controller_ip
            echo "ING_CTL_IP=$ingress_controller_ip" >> $GITHUB_ENV

      shell: bash

    - name: setup DNS
      run: |
            echo "ING_CTL_IP:" $ING_CTL_IP
            az deployment group create --name aks-dns -f iac/bicep/modules/aks/dns.bicep -g ${{ env.RG_APP }} \
            -p dnsZoneType=custom \
            -p customDns=${{ env.CUSTOM_DNS }} \
            -p recordSetA=@ \            
            -p location=${{ env.LOCATION }} \
            -p vnetName=${{ env.VNET_NAME }} \
            -p aksSvcIp=$ING_CTL_IP

            echo "CLUSTER_RESOURCE_GROUP:" $managed_rg
            ingControllerPublicIpId=$(az network public-ip list -g $managed_rg --query "[?ipAddress!=null]|[?contains(ipAddress, '$ING_CTL_IP')].[id]" --output tsv)
            echo $ingControllerPublicIpId
            
            az network public-ip update --ids $ingControllerPublicIpId --dns-name ${{ env.AZURE_DNS_LABEL_NAME }} -g $managed_rg

      shell: bash

    # security hardening for self-hosted agents: https://github.com/marketplace/actions/azure-login
    # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#hardening-for-self-hosted-runners
    # if the runner is self-hosted which is not github provided it is recommended to manually logout at the end of the workflow as shown below.
    - name: Azure Logout security hardening
      run: |
          az logout
          az cache purge
          az account clear
      shell: bash